#===============================================================================
# Ratification Thresholds Master. 
# Project: Ratification Thresholds
# Chris Arnold, Cardiff University,  May 2019 
#===============================================================================

# 0 Housekeeping ===============================================================
setwd("~/Dropbox/ratification_thresholds/code/")

# Libraries
library(survival)
library(foreign)
library(readstata13)
library(ranger)
library(ggplot2)
library(dplyr)
library(ggfortify)
library(MatchIt)
library(Zelig)
library(dummies)
library(cem)
library(stargazer)
library(fastDummies)

library(VennDiagram)
# install.packages("BiocManager")
# BiocManager::install("limma")
library(limma)

# helper files
source("helpers/helpers_data.r")
source("helpers/helpers_matching.r")
source("helpers/helpers_causal_effect.r")

# colours
# Viridis Colours
library(viridisLite)
library(viridis)

# Predefined Cardiff colours
# primary
cardiffred <- rgb(211,55,74, maxColorValue = 255)
cardiffblack <- rgb(35,21,32, maxColorValue = 255)
cardiffgrey <- rgb(47,68,78, maxColorValue = 255)
cardiffgold <- rgb(189,158,94, maxColorValue = 255)
# secondary 
cardiffblue <- rgb(21,44,81, maxColorValue = 255)
cardiffblue2 <- rgb(21,44,81, alpha = 140, maxColorValue = 255)
cardiffpurple1 <- rgb(29,15,51, maxColorValue = 255)
cardiffpurple2 <- rgb(60,44,89, maxColorValue = 255)
# Transparent colours
library(grDevices)
cardiffblue.t <- adjustcolor( cardiffblue, alpha.f = 0.5)
cardiffred.t <- adjustcolor( cardiffred, alpha.f = 0.5)
cardiffgold.t <- adjustcolor( cardiffgold, alpha.f = 0.5)



# Dependencies
# For full dependencies see bottom of the script
# R version 4.0.3 (2020-10-10)
# Platform: x86_64-apple-darwin17.0 (64-bit)
# Running under: macOS Big Sur 10.16


# Flag to develop the code 
# TODO Later in the project remove when you move towards replication code
runall <- FALSE
# runall <- TRUE



# 1 Read Data ==================================================================
dat <- read.dta13("../data/mtdsg_18april2019.dta")

source("data_management.r")
# Output: 
#   dat.treaty aggregates all information up to the treaty level.
#   dat.rat is the subset from the overall data that only uses explicit ratification
#   dat.df.rat.misc.all.treaties uses all actions similar to ratification


# 2 Describing MPRs ============================================================
# Generates descriptive figures and tables of the MPRs
if (runall) source("descriptive_data_analysis.r")

# -- 3 Explaining Existence and Design of MPR ----------------------------------
## 3.1 When do we see MPRs? --
if (runall) source("analyse_any_threshold.r")


## 3.2 What explains the "demandingness" of a threshold?
### 3.2.1 How is the threshold combination?
if (runall) source('analyse_threshold_combination.r')



### 3.2.2 How many countries?
if (runall) source('analyse_how_high.r')


### 3.2.3 When do we see custom-made or boilerplate MPRs?
if (runall) source('analyse_boilerplate.r')


# -- 4 MPRs influence on participating in multilateral agreements --------------

## How do MPRs influence the entry into force of agreements?
if (runall) source('analyse_entry_into_force.r')
# WE ARE HERE

## How do MPRs condition ratification after the threshold is met?
# Matching analysis
# if (runall) {}
  
source('code/ce_of_mpr.r')
# XXX until here 








# sessionInfo()
# R version 4.0.3 (2020-10-10)
# Platform: x86_64-apple-darwin17.0 (64-bit)
# Running under: macOS Big Sur 10.16
# 
# Matrix products: default
# LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib
# 
# locale:
#   [1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8
# 
# attached base packages:
#   [1] tcltk     stats     graphics  grDevices utils     datasets  methods   base     
# 
# other attached packages:
#   [1] cem_1.1.29        lattice_0.20-41   dummies_1.5.6     Zelig_5.1.7       MatchIt_4.1.0    
# [6] ggfortify_0.4.11  dplyr_1.0.6       ggplot2_3.3.3     ranger_0.12.1     readstata13_0.9.2
# [11] foreign_0.8-80    survival_3.2-7   
# 
# loaded via a namespace (and not attached):
#   [1] tidyr_1.1.3         VGAM_1.1-5          jsonlite_1.7.2      splines_4.0.3      
# [5] carData_3.0-4       Formula_1.2-4       AER_1.2-9           assertthat_0.2.1   
# [9] stats4_4.0.3        cellranger_1.1.0    pillar_1.6.1        backports_1.2.1    
# [13] quantreg_5.83       glue_1.4.2          digest_0.6.27       randomForest_4.6-14
# [17] colorspace_2.0-0    sandwich_3.0-0      Matrix_1.2-18       survey_4.0         
# [21] conquer_1.0.2       pkgconfig_2.0.3     broom_0.7.6         SparseM_1.81       
# [25] haven_2.3.1         purrr_0.3.4         scales_1.1.1        openxlsx_4.2.3     
# [29] rio_0.5.16          MatrixModels_0.4-1  combinat_0.0-8      tibble_3.1.2       
# [33] generics_0.1.0      car_3.0-10          ellipsis_0.3.2      withr_2.4.1        
# [37] geepack_1.3-2       maxLik_1.4-8        magrittr_2.0.1      crayon_1.4.1       
# [41] readxl_1.3.1        mcmc_0.9-7          fansi_0.4.2         nlme_3.1-149       
# [45] MASS_7.3-53         forcats_0.5.1       tools_4.0.3         data.table_1.13.6  
# [49] hms_1.0.0           mitools_2.4         lifecycle_1.0.0     matrixStats_0.58.0 
# [53] stringr_1.4.0       MCMCpack_1.5-0      munsell_0.5.0       zip_2.1.1          
# [57] compiler_4.0.3      rlang_0.4.10        grid_4.0.3          miscTools_0.6-26   
# [61] gtable_0.3.0        abind_1.4-5         DBI_1.1.1           curl_4.3           
# [65] R6_2.5.0            gridExtra_2.3       zoo_1.8-8           utf8_1.1.4         
# [69] Amelia_1.7.6        stringi_1.5.3       Rcpp_1.0.6          vctrs_0.3.8        
# [73] tidyselect_1.1.0    coda_0.19-4         lmtest_0.9-38 

